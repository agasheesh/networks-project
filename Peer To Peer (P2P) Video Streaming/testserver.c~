#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <string.h>
#include <stdlib.h>

#define LEN 30

int port=1235;


int main() {
  struct sockaddr_in cli_addr, serv_addr;
  int s, c, c_len, buf_len;
  char buf[LEN], buf2[sizeof(int)], temp[LEN];
    
  if ((s=socket(AF_INET,SOCK_STREAM,0))== -1){
    perror("socket");
    exit(1);
  }
  
  bzero (&serv_addr, sizeof (serv_addr));
  serv_addr.sin_family = AF_INET;
  serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
  serv_addr.sin_port = htons (port);
  
  if (bind(s, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) == -1) {
    perror("bind");
    exit(1);
  }

  if(listen(s, 5)== -1) {
    perror("listen");
    //exit(1);
  }
  
  while(1) {
    if ((c=accept(s,(struct sockaddr *)&cli_addr, &c_len)) == -1) {
      perror("accept");
      //exit(1);
    }
    
    printf("peer address from accept() is %s\n", (char *)inet_ntoa(cli_addr.sin_addr));
    
    int *len;
    recv(c, buf2, sizeof(int), 0);
    len=(int)buf2;
    recv(c, buf, *len, 0);
  
    if(strcmp("stream", buf)==0) {
      recv(c, buf2, sizeof(int), 0);
      len=(int)buf2;
      recv(c, buf, *len, 0);
      strcpy(temp, "vlc -q share/");
      strcat(temp, buf);
      strcat(temp, " &");
      system(temp);
    }
    else if(strcmp("stop", buf)==0)
      break;
  }
  close(c);
  close(s);
}